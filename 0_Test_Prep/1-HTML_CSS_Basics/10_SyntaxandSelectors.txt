MDN Selectors > https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors

Other useful selectors
Descendant Selector
The descendant selector matches all elements that are descendants of a specified element. The selector below will find all of the p tags inside of a footer tag (read the selectors from right to left).

footer p {
    background:red;
}

Adjacent Selector
The adjacent selector finds all elements that are directly adjacent to some other specified element. The selector below will find all the h4 tags that are directly adjacent to an h1 tag.

h1+h4 {
    background:blue;
}

Direct child selector
This is commonly confused with the descendant selector. The direct child selector matches all elements that are direct children - not just ancestors - of a specified element. The selector below will find all lis which are children of a ul.

ul > li {
    background:blue;
}

Attribute Selector
The attribute selector finds elements based on the value of some attribute. The selector below will find all a tags whose href attribute is set to "#".

a[href="#"] {
    background:blue;
}

First / Last Child Selector
The first-child and last-child selectors find all elements which are the first (or last, respectively) children of their parents. The selector below will find all the li's which are the first children of their parents.

li:first-child {
    background:blue;
}

n-th child selector
This is a sort of generalization of the selectors above. nth-child will find all elements which are the nth children of their parents, for some specified value of n. The selector below will find all the li's which are the second children of their parents.

li:nth-child(2) {
    background: teal;
}

One important thing to know about CSS is the C, or cascading nature of CSS. This means that your code is read top to bottom, so if you have the same level of specificity, the rule closest to the bottom wins. For example, consider the following stylesheet:
<style>
p {
    font-size: 16px;
}

p {
    font-size: 100px;
}
</style>
These two rules conflict, but because they have the same degree of specificity, cascading will kick in, and the latter rule will overwrite the former. The text on this page will be huge!