Let's write a function called add that takes in two parameters - number1 and number2 - and returns their sum.
    function add(number1, number2){
        return number1 + number2;
    }

    add(4, 6); // returns 10
    add(2, 8); // returns 10
    add(7, 1); // returns 8

______________________________________________________
Function Scope
Now that we have an idea of what functions do, let's talk about what happens when we define variables inside of functions. To do that, we first need to define what scope is.

The important takeaways here are
1. all variables that are defined outside of functions (and inside of functions without the let keyword) are declared in the global scope, and
2. all variables defined inside of functions can only be accessed by those functions (and any inner functions).

What happens when we remove the let keyword?
    // Since this variable declaration is in the global scope, it will
    // be a global variable with or without the let keyword.  It is a best
    // practice to always use the let keyword though.
    globalvariable = "I live in the global scope";

    function makeNewScope(){
        // You do not want to do this in practice.  You should
        // always defined your variables with the let keyword.
        functionScopevariable = "What happens now?";
    }

    globalvariable; // "I live in the global scope"
    makeNewScope(); // now this will define the functionScopevariable!

    // The value of the variable will be "What happens now?"
    functionScopevariable;

If we omit the let keyword inside of a function, we actually declare that variable in the global scope. While this may seem like the way to go, this is not best practice. If we need to change some variable in a function, we should at least declare it in the global scope and assign it in a function so that our code is more readable.
