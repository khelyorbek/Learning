https://getbootstrap.com/docs/4.0/getting-started/download/#bootstrap-cdn

Containers
Any layout that you build with Bootstrap should begin with a container. According to the docs, "Containers are the most basic layout element in Bootstrap and are required when using our default grid system" (emphasis original). We'll get to the grid system momentarily, but for now let's talk about containers.

A container is just a div with one of two classes: either container or container-fluid. 
    container elements have fixed widths that change at a finite number of break points, 
    container-fluid elements always take up 100% of the available width.
    EXAMPLE: https://codepen.io/mmmaaatttttt/pen/wrzBbJ?editors=1000

The Grid System
Many CSS frameworks, Bootstrap included, come with some sort of grid system. A grid system is a way to organize the content on your page in terms of rows and columns. For example, maybe you're building a page that has a sidebar and a main content area. With a grid system, you can specify how many columns you want the sidebar to take up, and how many columns you want the main content area to take up.

Bootstrap's grid system uses a twelve-column grid layout. This means that when you're using the system, you can specify to bootstrap how many columns you want your content to take up, out of a possible maximum of twelve columns.
EXAMPLE: https://codepen.io/mmmaaatttttt/pen/OxREaz


Let's try to understand how Bootstrap's grid system works. In order to make use of the grid system, you first need to have a container, created with either the container or container-fluid class. After that, you can create a row for the grid using the row class. Inside of the rows, you should only place columns classes, and finally, your content will live inside of the columns.

Size	       ExtraSmall	Small	Medium	Large	Extra Large
Break Point	   N/A	       576px	768px	992px	1200px
Class Prefix   col-	       col-sm-	col-md	col-lg	col-xl

You can also have your columns auto-adjust to the available width by simply giving them a class of col. When you do this, the columns will take up all of the available width. Here's an example: https://codepen.io/mmmaaatttttt/pen/jGMvem?editors=1000

You can also offset columns if you want to add some space between them or around them. Under the hood, the grid system in version 4 of Bootstrap uses flexbox, which means there are several ways you can offset columns. One approach is to set the justify-content property on the row. Bootstrap provides you with classes to modify this property on the rows.

Another approach is to modify the margins. Bootstrap gives you two classes which can be helpful for offsetting columns using margin: ml-auto, which sets the margin-left to auto, and mr-auto, which sets the margin-right to auto. Here's an example of the two approaches: https://codepen.io/mmmaaatttttt/pen/BwLqKW?editors=1000
^^^^^^^^^^^^^
mr-auto << will adjut margin to the right of the element
ml-auto << will adjust margin to the left of the element

As you can see, the first two rows offset the columns by modifying the justify-content property. The second two rows have the same effect, but go about it using margin.

We can also nest rows inside of columns. Every new row gains access to its own 12-column grid system. Here's an example that uses this kind of nesting:
https://codepen.io/mmmaaatttttt/pen/xXEQYq?editors=1000



